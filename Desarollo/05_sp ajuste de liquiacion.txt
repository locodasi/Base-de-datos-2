
delimiter
$$
CREATE PROCEDURE ajuste_liquidacion(in mes1 INT)
BEGIN


/*seccion de cursor*/
DECLARE rol_c VARCHAR(255);
DECLARE proyecto_c VARCHAR(255);
DECLARE liquidaciones CURSOR FOR SELECT rol FROM aux;
DECLARE c_proyecto CURSOR FOR SELECT proyecto FROM auxp;

DECLARE CONTINUE HANDLER FOR NOT FOUND


SET rol_c=" ";
SET proyecto_c=" ";
SET @numero_de_liq=0;
SET @numero_de_roles=0;
SET @numero_de_proyectos=0;

INSERT INTO auxp(
SELECT l.proyecto,l.mes
FROM liquidacion l
WHERE l.mes=mes1
GROUP BY l.proyecto, l.mes
);

 SET @numero_de_proyectos=(SELECT COUNT(DISTINCT ap.proyecto)
 FROM auxp ap
 );



OPEN c_proyecto;
pro:loop
	fetch c_proyecto INTO proyecto_c;
	if @numero_de_proyectos=0 then leave pro;
	END if;

	INSERT INTO aux(
	SELECT *
	FROM liquidacion l
	WHERE l.proyecto=proyecto_c AND l.mes=mes1
	);
	
	
	 SET @numero_de_liq=(SELECT COUNT(DISTINCT a.numero_Liquidacion)
	 FROM aux a
	 );
	SET @numero_de_liq=@numero_de_liq+1;
	
	
	 SET @numero_de_roles=(SELECT COUNT(DISTINCT a.rol)
	 FROM aux a
	 );
 
 


	OPEN liquidaciones;
	liq:loop
		fetch liquidaciones INTO rol_c;
		if @numero_de_roles=0 then leave liq;
		END if;
		
		
		SET @diff=0;
		SET @numero_rendidas=0;
		SET @numero_liq=0;
	
		SET @numero_rendidas = (select SUM(h.horas)
		FROM horas_rendidas h INNER JOIN participantes p ON h.legajo=p.legajo AND p.proyecto=h.proyecto
		WHERE p.rol=rol_c AND h.proyecto=proyecto_c AND (MONTH(h.dia)=mes1 OR MONTH(h.hasta) = mes1));
	
		SET @numero_liq=(SELECT SUM(a.horas)
		FROM aux a
		WHERE a.rol=rol_c);
		
	
	 	SET @diff= @numero_rendidas - @numero_liq;
	
		IF @diff != 0 THEN 
		INSERT INTO liquidacion() VALUES (rol_c,proyecto_c,@diff,mes1,@numero_de_liq);
	    END IF;
	    
	    SET @numero_de_roles= @numero_de_roles-1;
	    
	    
	    
	END loop;
	close liquidaciones;
	TRUNCATE aux;
	
	SET @numero_de_proyectos= @numero_de_proyectos-1;
	
END loop;
close c_proyecto;

TRUNCATE auxp;
end
$$

